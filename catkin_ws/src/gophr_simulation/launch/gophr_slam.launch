<?xml version="1.0"?>
<launch>
    
  <!-- Run Gazebo -->
  <include file="$(find gophr)/gazebo/launch/robot_gazebo_big.launch"/>
    
  <!-- Run rviz -->
  <include file="$(find gophr)/rviz/launch/robot_rviz.launch"/>

  <!-- Run AMCL when there is an existing map-->
  <!--<include file="$(find gophr)/nav/launch/amcl.launch"/>-->
  
  <param name="use_sim_time" value="true"/>
  <!--Gmapping SLAM is used to build a map by taking in sensor_msgs/Laserscan messages as the robot moves in its environment-->
  <!--The map can be retrieved via a ROS topic or service.-->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
      <param name="base_frame" value="base_link"/>
      <param name="map_fram" value="map"/>
      <param name="odom_frame" value="odom"/>
      <param name="map_update_interval" value="5.0"/>
      <param name="maxUrange" value="16.0"/>
      <param name="sigma" value="0.05"/>
      <param name="kernelSize" value="1"/>
      <param name="lstep" value="0.05"/>
      <param name="astep" value="0.05"/>
      <param name="iterations" value="5"/>
      <param name="lsigma" value="0.075"/>
      <param name="ogain" value="3.0"/>
      <param name="lskip" value="0"/>
      <param name="srr" value="0.1"/>
      <param name="srt" value="0.2"/>
      <param name="str" value="0.1"/>
      <param name="stt" value="0.2"/>
      <param name="linearUpdate" value="1.0"/>
      <param name="angularUpdate" value="0.5"/>
      <param name="temporalUpdate" value="3.0"/>
      <param name="resampleThreshold" value="0.5"/>
      <param name="particles" value="30"/>
      <param name="xmin" value="-50.0"/>
      <param name="ymin" value="-50.0"/>
      <param name="xmax" value="50.0"/>
      <param name="ymax" value="50.0"/>
      <param name="delta" value="0.05"/>
      <param name="llsamplerange" value="0.01"/>
      <param name="llsamplestep" value="0.01"/>
      <param name="lasamplerange" value="0.005"/>
      <param name="lasamplestep" value="0.005"/>
    </node>

  <!-- Robot Pose EKF is used to combine the odom and map, this requires some sort of localization (odom)-->
  <!-- The odom comes the simulation from gazebo (name="gazebo_ros_control" filename="libgazebo_ros_control.so")-->
  <!--  and (<plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">)-->
  <include file="$(find gophr)/nav/launch/robot_pose_ekf.launch"/>
    
  <!-- Run move_base node -->
  <include file="$(find gophr)/nav/launch/move_base.launch"/>
  
  <!--<node name="node_select" pkg="gophr" type="nodeSelection_1.py" />
  <node name="waypoint_create" pkg="gophr" type="waypointCreation_2.py" />
  <node name="navigate_to_goal" pkg="gophr" type="navigateToGoals_3.py" /> --> <!-- publishes to topic /move_base/goal -->
    
  <!-- simple navigation move forward-->
  <!--<node name="simple_navigation_goalss" pkg="gophr" type="simple_navigation_goalss.py" />-->
   
    
</launch>
