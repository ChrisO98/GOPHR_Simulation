<?xml version="1.0"?>
<launch>

    <!-- Load the URDF into the ROS Parameter Server --> <!-- stays on -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find gophr)/urdf/gophr_robot.xacro'" />
    
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
      <param name="use_gui" value="False"/>
    </node>
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    
    <node pkg="rviz" type="rviz" name="rviz" args=""/>
    

    <!-- Additional node which converts Cartographer map into ROS occupancy grid map. Not used and can be skipped in this case -->
    <!--<node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" />-->
    
    <!--<node name="node_select" pkg="gophr" type="nodeSelection_1.py" />
    <node name="waypoint_create" pkg="gophr" type="waypointCreation_2.py" />
    <node name="navigate_to_goal" pkg="gophr" type="navigateToGoals_3.py" /> --> <!-- publishes to topic /move_base/goal -->
    
    <!--<node name="gophr_move_node" pkg="gophr" type="gophr_move_node" />--> <!-- move base-->
    <!-- name and type must be the same for cpp to complie and execute, they will match with the same name that the CMakeLists.txt has for add_executable(gophr_move_node src/move_robot.cpp ${GOPHR_SRC}) and target_link_libraries(gophr_move_node ${catkin_LIBRARIES}) -->
    
</launch>
