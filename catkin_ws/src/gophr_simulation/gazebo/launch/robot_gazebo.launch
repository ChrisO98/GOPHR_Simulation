<?xml version="1.0"?>
<launch>

    <!-- Gazebo Launch -->
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find gophr)/worlds/map1.sdf"/>
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server --> <!-- stays on -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find gophr)/urdf/gophr_robot.xacro'" />
    <!--<param name="use_gui" value="false"/>-->

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model gophr_robot -param robot_description"/>
    
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find gophr)/config/gophr_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="gophr" args="front_right_wheel_velocity_controller front_left_wheel_velocity_controller back_right_wheel_velocity_controller back_left_wheel_velocity_controller joint_state_controller"/>

    <!--Publish the robot model moving joints TF (not "fixed" ex. "continuous")-->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

    <!--Publish the robot model TF "fixed" joints (links) ("fixed" joints will be published correctly, need joint_state_publisher to get any non-"fixed" joints TF)-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <param name="publish_frequency" type="double" value="50.0" />
        <!--No longer needed as to fix Odom and Map publishing issues. The "namespace" "gophr" had to be removed from every instace of a "namespace" as it must be left blank to allow it to work with other packages-->
        <!--<remap from="/joint_states" to="/gophr/joint_states" />--> <!-- this line is very important for visualization in RVIZ when used in conjunction with Gazebo (because of the namespace change)-->
    </node>
    
</launch>